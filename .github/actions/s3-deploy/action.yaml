name: "S3 React App Deploy"
description: "Build and deploy React app to S3 and optionally invalidate CloudFront"

inputs:
  # Specify OIDC Role Name or Create OIDC Role Name
  create_oidc_role:
    required: false
    default: "true"
    description: "Whether to create a new OIDC role or use an existing one"
  oidc_role:
    required: false
    description: "Github OIDC role name. [oidc-repo-env-plan]"

  # Github OIDC Setup
  aws_account_id:
    required: true
    description: "AWS account ID"

  # Create OIDC Role Name
  project_name:
    required: true
    description: "Project name"
  environment:
    required: true
    description: "Environment (e.g., development, production)"

  # S3 Bucket Configuration
  bucket:
    required: true
    description: "S3 bucket to deploy to"
  region:
    required: true
    description: "AWS region"

  # React App Configuration
  dist_dir:
    required: false
    default: "dist"
    description: "React app build output directory"
  build_command:
    required: false
    default: "npm run build"
    description: "Command to build the React app"

  # Cloudfront Configuration
  distribution_id:
    required: false
    description: "Optional CloudFront distribution ID to invalidate"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Setup Default OIDC Role Name (Apply Permissions)
      if: inputs.create_oidc_role == 'true' || inputs.create_oidc_role == 'false' && inputs.oidc_role == ''
      run: echo "OIDC_ROLE=oidc-${{ inputs.project_name }}-${{ inputs.environment }}-apply" >> $GITHUB_ENV
      shell: bash

    - name: Use Provided OIDC Role Name
      if: inputs.create_oidc_role != 'true' && inputs.oidc_role != ''
      run: echo "OIDC_ROLE=${{ inputs.oidc_role }}" >> $GITHUB_ENV
      shell: bash

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install Dependencies
      run: npm ci
      shell: bash

    - name: Build React App
      run: ${{ inputs.build_command }}
      shell: bash

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ env.OIDC_ROLE }}
        aws-region: ${{ inputs.region }}

    - name: Upload to S3
      run: aws s3 sync ${{ inputs.dist_dir }} s3://${{ inputs.bucket }} --delete
      shell: bash

    - name: Invalidate CloudFront Cache
      if: ${{ inputs.distribution_id != '' }}
      run: |
        echo "Invalidating CloudFront cache for distribution: ${{ inputs.distribution_id }}"
        aws cloudfront create-invalidation \
          --distribution-id ${{ inputs.distribution_id }} \
          --paths "/*"
      shell: bash

