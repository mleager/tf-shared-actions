name: "Terraform Apply"
description: "Initializes and applies Terraform using S3 backend"

inputs:
  bucket:
    required: false
    default: "tf-state-8864"
    description: "S3 backend bucket"
  key:
    required: true
    description: "S3 backend key"
  region:
    required: true
    description: "AWS region"
  var_file:
    required: false
    default: "terraform.tfvars.development"
    description: "Terraform var file"
  tf_version:
    required: false
    default: "1.12.1"
    description: "Terraform version"

  # Set input to true and add github_token to post a Commit Comment
  make_commit_comment:
    required: false
    default: "true"
    description: "Whether to post a commit comment after apply"
  github_token:
    required: false
    description: "GitHub token required if posting a commit comment"

  aws_access_key_id:
    required: true
    description: "AWS access key ID"
  aws_secret_access_key:
    required: true
    description: "AWS secret access key"

secrets:
  aws_access_key_id:
    required: true
    description: "AWS access key ID"
  aws_secret_access_key:
    required: true
    description: "AWS secret access key"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.tf_version }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.region }}

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.bucket }}" \
          -backend-config="key=${{ inputs.key }}" \
          -backend-config="region=${{ inputs.region }}" \
          -backend-config="encrypt=true" \
          -backend-config="use_lockfile=true"
      working-directory: ./terraform
      shell: bash

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./terraform
      shell: bash

    - name: Terraform Apply
      id: apply
      run: |
        terraform apply -auto-approve -var-file=${{ inputs.var_file }}
        EXIT_CODE=$?
        echo "status=$EXIT_CODE" >> $GITHUB_OUTPUT
      working-directory: ./terraform
      shell: bash
      continue-on-error: true

    - name: Post Commit Comment
      if: ${{ inputs.make_commit_comment == 'true' }}
      uses: actions/github-script@v6
      env:
        STATUS: ${{ steps.apply.outputs.status }}
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const status = parseInt(process.env.STATUS);
          const isSuccess = status === 0;
          const message = isSuccess
            ? `✅ Terraform Apply succeeded on commit \`${context.sha.slice(0, 7)}\`.`
            : `❌ Terraform Apply **failed** on commit \`${context.sha.slice(0, 7)}\`.`;

          await github.rest.repos.createCommitComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha,
            body: message
          });

          if (!isSuccess) {
            core.setFailed("Terraform apply failed");
          }

