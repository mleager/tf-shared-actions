name: "Post Terraform Plan as PR Comment"
description: "Creates or updates a PR comment with the Terraform plan"

inputs:
  plan:
    description: "Base64 encoded Terraform plan output"
    required: true
  github_token:
    description: "GitHub token"
    required: true

runs:
  using: "composite"
  steps:
    - name: Post PR Comment
      uses: actions/github-script@v6
      env:
        PLAN: ${{ inputs.plan }}
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const plan = Buffer.from(process.env.PLAN, 'base64').toString('utf8');

          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });

          const botComment = comments.find(comment => {
            return comment.user.type === 'Bot' && comment.body.includes('Terraform Plan');
          });

          const body = `## Terraform Plan

          <details><summary>Show Plan</summary>

          \`\`\`hcl
          ${plan}
          \`\`\`

          </details>`;

          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body,
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
          }

